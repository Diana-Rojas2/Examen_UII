@model IEnumerable<Examen_UII.Models.Dispositivos>

@{
    ViewData["Title"] = "Consultar";
}

@if (User.IsInRole("Admin"))
{
    <form method="get" asp-action="Registrar">
        <button class="btn btn-primary" type="submit">Agregar un Dispositivo</button>
    </form>
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col">
            <h2 class="text-center">Dispositivos registrados</h2>
            <br>
            <table id="tablaDispositivos" class="table table-striped">
                <thead>
                    <tr>
                        <th>Identificador</th>
                        <th>Dirección MAC</th>
                        <th>Descripción</th>
                        <th>Prioridad</th>
                        <th>Latitud</th>
                        <th>Longitud</th>
                        <th>Usuario</th>
                        <th>Zona</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>

        </div>
    </div>
</div>

<script src="~/js/SignalR.js"></script>
<script>
    var conexion = new signalR.HubConnectionBuilder().withUrl("/notificacionHub").build();

    conexion.start().then(function (e) {
        console.log("Conexión exitosa");
    }).catch((e) => {
        console.error("Error al conectarse al servidor de websockets");
    })

    async function GetDispositivos() {
        const respuesta = await fetch("http://localhost:5166/Dispositivos/GetDispositivos");
        const dispositivos = await respuesta.json();
        console.log(dispositivos);

        const tabla = document.getElementById("tablaDispositivos");
        const tbody = tabla.querySelector("tbody");

        tbody.innerHTML = "";

        // Iterar sobre las películas y agregar una fila por cada una
        dispositivos.forEach(dispositivo => {
            const fila = document.createElement("tr");
            fila.innerHTML = `
            <td>${dispositivo.identificador}</td>
            <td>${dispositivo.direccionMAC}</td>
            <td>${dispositivo.descripcion}</td>
            <td>${dispositivo.prioridad}</td>
            <td>${dispositivo.latitud}</td>
            <td>${dispositivo.longitud}</td>
            <td>${dispositivo.usuariosId}</td>
            <td>${dispositivo.zonasId}</td>
            <td>${dispositivo.estadosId}</td>
            <td>
                <button class="btn btn-danger" onclick="EliminarDispositivo(${dispositivo.id})">Eliminar</button>
            </td>
            `;

            // Establecer un atributo "data-deviceid" para identificar la fila.
            fila.setAttribute("data-deviceid", dispositivo.id);
            tbody.appendChild(fila);
        });
    }

    async function EliminarDispositivo(id) {
        const respuesta = await fetch("http://localhost:5166/Dispositivos/Eliminar", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(id), // Envía solo el ID como número entero.
        });

        if (respuesta.status === 200) {
            // Eliminación exitosa, eliminar la fila de la tabla
            const fila = document.querySelector(`tr[data-deviceid="${id}"]`);
            if (fila) {
                fila.remove();
            }
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        GetDispositivos();
    });

    conexion.on("AgregarATabla", () => {
        GetDispositivos();
    })

    conexion.on("DeviceDelete", function (deviceId) {
        // Busca la fila de la tabla correspondiente al dispositivo eliminado y elimínala.
        var fila = document.querySelector(`#tablaDispositivos tr[data-deviceid="${deviceId}"]`);
        if (fila) {
            fila.remove();
        }
    });

</script>